# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3.7'

# Define services
services:
  # App backend service
  app-server:
    # Configuration for building the docker image for the backend service
    build:

      dockerfile: Dockerfile
    ports:
      - "8084:8084" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on:
      - mongo # This service depends on mysql. Start that first.
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      - frontend

  # Frontend Service
  app-client:
    build:
      context: src/frontend # Use an image built from the specified dockerfile in the `polling-app-client` directory.
      dockerfile: /Dockerfile
      args:
        REACT_APP_API_BASE_URL: http://127.0.0.1:8084/api
    ports:
      - "9090:80" # Forward the exposed port 80 on the container to port 80 on the host machine
    restart: always
    depends_on:
      - app-server
    networks:
      - frontend

  # Database Service (Mysql)
  mongo:
    image: mongo
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: pass
    ports:
      - "27017:27017"
    volumes:
      - db-data:/var/lib/mongodb
    networks:
      - backend

# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend: